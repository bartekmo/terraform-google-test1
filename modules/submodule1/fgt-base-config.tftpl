config system global
  set hostname ${hostname}
end
config system probe-response
    set mode http-probe
    set http-probe-value OK
    set port ${healthcheck_port}
end
%{ if length(api_accprofile) > 0 }
config system api-user
  edit terraform
    set api-key ${api_key}
    set accprofile "${api_accprofile}"
    config trusthost
    %{ for cidr in api_acl ~}
      edit 0
        set ipv4-trusthost ${cidr}
      next
    %{ endfor ~}
    end
  next
end
%{ endif }
config system sdn-connector
    edit "gcp"
        set type gcp
        set ha-status disable
    next
end
config system dns
  set primary 169.254.169.254
  set protocol cleartext
  unset secondary
end
config system ha
    set group-name "gcp-group"
    set mode a-p
    set hbdev "${hbdev_port}" 50
    set session-pickup enable
    set ha-mgmt-status enable
    config ha-mgmt-interfaces
        edit 1
            set interface "${mgmt_port}"
            set gateway ${mgmt_gw}
        next
    end
    set override enable
    set priority ${ha_prio}
    set unicast-hb enable
    set unicast-hb-peerip ${unicast_peer_ip}
    set unicast-hb-netmask ${unicast_peer_netmask}
end

config system interface
%{ for port,addr in priv_ips ~}
  edit ${port}
    set mode static
    set ip ${addr}/32
    %{ if port == mgmt_port ~}
    set allowaccess ping ssh https
    %{ else ~}
    set allowaccess ping
    set secondary-IP enable
    %{ endif ~}
    %{ if try(ilb_ips[port], "") != "" ~}
    config secondaryip
      edit 0
        set ip ${ilb_ips[port].address}/32
        set allowaccess probe-response
      next
    end
    %{ endif ~}
  next
%{ endfor ~}
end

config system interface
  edit port1
    config secondaryip
    %{ for eip in frontend_eips ~}
      edit 0
        set ip ${eip}/32
        set allowaccess probe-response
      next
    %{ endfor }
    end
  next
end

%{ if length(probe_loopback_ip) > 0 }
config system interface
  edit "probe"
    set vdom "root"
    set ip ${probe_loopback_ip} 255.255.255.255
    set allowaccess probe-response
    set type loopback
  next
end
%{ endif ~}

config route static
%{ for subnet, info in subnets ~}
  %{ if info.dev!=mgmt_port ~}
  edit 0
    set dst ${subnet}
    set gateway ${info.gw}
    set device ${info.dev}
    set comment ${info.name}
  next
  %{ endif ~}
%{ endfor ~}
  edit 0
    set device port1
    set comment "default"
    set gateway ${gateways["port1"]}
  next
%{ for port,addr in ilb_ips ~}
  edit 0
    set device ${port}
    set gateway ${gateways[port]}
    set dst 35.191.0.0/16
  next
  edit 0
    set device ${port}
    set gateway ${gateways[port]}
    set dst 130.211.0.0/22
  next
%{ endfor ~}
end

config firewall ippool
%{ for name, eip in frontend_eips ~}
  edit ${name}
  set startip ${eip}
  set endip ${eip}
  set comment "GCP load balancer frontend"
  next
%{ endfor ~}
end

${fgt_config}
